.TH "sync/SyncTest.c" 3 "21 Aug 2012" "Version 0.6.1" "Content-Centric Networking in C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sync/SyncTest.c \- 
.PP
Part of CCNx Sync.  

.SH SYNOPSIS
.br
.PP
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBMAX_READ_LEN\fP   1000000"
.br
.ti -1c
.RI "#define \fBDEFAULT_CMD_TIMEOUT\fP   6000"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "PUBLIC void \fBccnr_msg\fP (struct \fBccnr_handle\fP *h, const char *fmt,...)"
.br
.RI "\fIProduce ccnr debug output. \fP"
.ti -1c
.RI "PUBLIC int \fBccnr_msg_level_from_string\fP (char *s)"
.br
.ti -1c
.RI "PUBLIC void \fBr_sync_notify_after\fP (struct \fBccnr_handle\fP *ccnr, \fBccnr_hwm\fP item)"
.br
.RI "\fINotify repo of starting point for new names to be passed to sync. \fP"
.ti -1c
.RI "PUBLIC int \fBr_sync_enumerate\fP (struct \fBccnr_handle\fP *ccnr, struct \fBccn_charbuf\fP *interest)"
.br
.RI "\fIRequest that a SyncNotifyContent call is made for each content object matching the interest. \fP"
.ti -1c
.RI "PUBLIC int \fBr_sync_lookup\fP (struct \fBccnr_handle\fP *ccnr, struct \fBccn_charbuf\fP *interest, struct \fBccn_charbuf\fP *content_ccnb)"
.br
.RI "\fILook up a content object that is stored locally in the repository based on the supplied interest. \fP"
.ti -1c
.RI "PUBLIC enum \fBccn_upcall_res\fP \fBr_sync_upcall_store\fP (struct \fBccnr_handle\fP *ccnr, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP *info)"
.br
.RI "\fICalled when a content object is received by sync and needs to be committed to stable storage by the repo. \fP"
.ti -1c
.RI "PUBLIC int \fBr_sync_local_store\fP (struct \fBccnr_handle\fP *ccnr, struct \fBccn_charbuf\fP *content)"
.br
.RI "\fICalled when a content object has been constructed locally by sync and needs to be committed to stable storage by the repo. \fP"
.ti -1c
.RI "PUBLIC uintmax_t \fBccnr_accession_encode\fP (struct \fBccnr_handle\fP *ccnr, \fBccnr_accession\fP a)"
.br
.ti -1c
.RI "PUBLIC \fBccnr_accession\fP \fBccnr_accession_decode\fP (struct \fBccnr_handle\fP *ccnr, uintmax_t encoded)"
.br
.ti -1c
.RI "PUBLIC int \fBccnr_accession_compare\fP (struct \fBccnr_handle\fP *ccnr, \fBccnr_accession\fP x, \fBccnr_accession\fP y)"
.br
.ti -1c
.RI "PUBLIC uintmax_t \fBccnr_hwm_encode\fP (struct \fBccnr_handle\fP *ccnr, \fBccnr_hwm\fP hwm)"
.br
.ti -1c
.RI "PUBLIC \fBccnr_hwm\fP \fBccnr_hwm_decode\fP (struct \fBccnr_handle\fP *ccnr, uintmax_t encoded)"
.br
.ti -1c
.RI "PUBLIC int \fBccnr_acc_in_hwm\fP (struct \fBccnr_handle\fP *ccnr, \fBccnr_accession\fP a, \fBccnr_hwm\fP hwm)"
.br
.ti -1c
.RI "PUBLIC \fBccnr_hwm\fP \fBccnr_hwm_update\fP (struct \fBccnr_handle\fP *ccnr, \fBccnr_hwm\fP hwm, \fBccnr_accession\fP a)"
.br
.ti -1c
.RI "PUBLIC \fBccnr_hwm\fP \fBccnr_hwm_merge\fP (struct \fBccnr_handle\fP *ccnr, \fBccnr_hwm\fP x, \fBccnr_hwm\fP y)"
.br
.ti -1c
.RI "PUBLIC int \fBccnr_hwm_compare\fP (struct \fBccnr_handle\fP *ccnr, \fBccnr_hwm\fP x, \fBccnr_hwm\fP y)"
.br
.ti -1c
.RI "static int \fBnoteErr\fP (const char *fmt,...)"
.br
.ti -1c
.RI "static int \fBparseAndAccumName\fP (char *s, struct \fBSyncNameAccum\fP *na)"
.br
.ti -1c
.RI "static struct \fBSyncNameAccum\fP * \fBreadAndAccumNames\fP (FILE *input, int rem)"
.br
.ti -1c
.RI "static void \fBprintTreeInner\fP (struct \fBSyncTreeWorkerHead\fP *head, struct \fBccn_charbuf\fP *tmpB, struct \fBccn_charbuf\fP *tmpD, FILE *f)"
.br
.ti -1c
.RI "static void \fBprintTree\fP (struct \fBSyncTreeWorkerHead\fP *head, FILE *f)"
.br
.ti -1c
.RI "static void \fBputMark\fP (FILE *f)"
.br
.ti -1c
.RI "static struct \fBSyncNodeComposite\fP * \fBtestGenComposite\fP (struct \fBSyncBaseStruct\fP *base, int nRefs)"
.br
.ti -1c
.RI "static int \fBtestEncodeDecode\fP (struct SyncTestParms *parms)"
.br
.ti -1c
.RI "static int \fBtestReader\fP (struct SyncTestParms *parms)"
.br
.ti -1c
.RI "static int \fBtestReadBuilder\fP (struct SyncTestParms *parms)"
.br
.ti -1c
.RI "static struct \fBSyncRootStruct\fP * \fBgenTestRootRouting\fP (struct SyncTestParms *parms)"
.br
.ti -1c
.RI "static struct \fBSyncRootStruct\fP * \fBgenTestRootRepos\fP (struct SyncTestParms *parms)"
.br
.ti -1c
.RI "static struct \fBSyncRootStruct\fP * \fBtestRootCoding\fP (struct SyncTestParms *parms, struct \fBSyncRootStruct\fP *root)"
.br
.ti -1c
.RI "static int \fBtestRootLookup\fP (struct SyncTestParms *parms, struct \fBSyncRootStruct\fP *root, char *goodName, char *badName)"
.br
.ti -1c
.RI "static int \fBtestRootBasic\fP (struct SyncTestParms *parms)"
.br
.ti -1c
.RI "static int \fBlocalStore\fP (struct SyncTestParms *parms, struct ccn *ccn, struct \fBccn_charbuf\fP *nm, struct \fBccn_charbuf\fP *cb)"
.br
.ti -1c
.RI "static int \fBsendSlice\fP (struct SyncTestParms *parms, char *topo, char *prefix, int count, char **clauses)"
.br
.ti -1c
.RI "static int64_t \fBsegFromInfo\fP (struct \fBccn_upcall_info\fP *info)"
.br
.ti -1c
.RI "static enum \fBccn_upcall_res\fP \fBstoreHandler\fP (struct \fBccn_closure\fP *selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP *info)"
.br
.ti -1c
.RI "static void \fBformatStats\fP (struct SyncTestParms *parms)"
.br
.ti -1c
.RI "static int \fBgetFile\fP (struct SyncTestParms *parms, char *src, char *dst)"
.br
.ti -1c
.RI "static int \fBputFile\fP (struct SyncTestParms *parms, char *src, char *dst)"
.br
.ti -1c
.RI "int \fBappendComponents\fP (struct \fBccn_charbuf\fP *dst, const struct \fBccn_charbuf\fP *src, int start, int len)"
.br
.ti -1c
.RI "static int \fBputFileList\fP (struct SyncTestParms *parms, char *listName)"
.br
.ti -1c
.RI "static int \fBexistingRootOp\fP (struct SyncTestParms *parms, char *topo, char *prefix, int delete)"
.br
.ti -1c
.RI "int \fBmain\fP (int argc, char **argv)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Part of CCNx Sync. 


.PP
Definition in file \fBSyncTest.c\fP.
.SH "Define Documentation"
.PP 
.SS "#define DEFAULT_CMD_TIMEOUT   6000"
.PP
Definition at line 52 of file SyncTest.c.
.PP
Referenced by existingRootOp(), localStore(), putFile(), and putFileList().
.SS "#define MAX_READ_LEN   1000000"
.PP
Definition at line 51 of file SyncTest.c.
.PP
Referenced by putFileList(), testReadBuilder(), and testReader().
.SH "Function Documentation"
.PP 
.SS "int appendComponents (struct \fBccn_charbuf\fP * dst, const struct \fBccn_charbuf\fP * src, int start, int len)"
.PP
Definition at line 1449 of file SyncTest.c.
.PP
Referenced by putFileList().
.SS "PUBLIC int ccnr_acc_in_hwm (struct \fBccnr_handle\fP * ccnr, \fBccnr_accession\fP a, \fBccnr_hwm\fP hwm)"
.PP
Definition at line 217 of file SyncTest.c.
.SS "PUBLIC int ccnr_accession_compare (struct \fBccnr_handle\fP * ccnr, \fBccnr_accession\fP x, \fBccnr_accession\fP y)"
.PP
Definition at line 196 of file SyncTest.c.
.SS "PUBLIC \fBccnr_accession\fP ccnr_accession_decode (struct \fBccnr_handle\fP * ccnr, uintmax_t encoded)"
.PP
Definition at line 190 of file SyncTest.c.
.PP
Referenced by r_store_content_btree_insert(), and r_store_look().
.SS "PUBLIC uintmax_t ccnr_accession_encode (struct \fBccnr_handle\fP * ccnr, \fBccnr_accession\fP a)"
.PP
Definition at line 184 of file SyncTest.c.
.PP
Referenced by r_store_content_base(), r_store_content_btree_insert(), r_store_content_from_accession(), r_store_set_accession_from_offset(), r_sync_enumerate(), r_sync_notify_content(), and SyncAddName().
.SS "PUBLIC int ccnr_hwm_compare (struct \fBccnr_handle\fP * ccnr, \fBccnr_hwm\fP x, \fBccnr_hwm\fP y)"
.PP
Definition at line 235 of file SyncTest.c.
.PP
Referenced by HeartbeatAction().
.SS "PUBLIC \fBccnr_hwm\fP ccnr_hwm_decode (struct \fBccnr_handle\fP * ccnr, uintmax_t encoded)"
.PP
Definition at line 211 of file SyncTest.c.
.PP
Referenced by fetchStablePoint().
.SS "PUBLIC uintmax_t ccnr_hwm_encode (struct \fBccnr_handle\fP * ccnr, \fBccnr_hwm\fP hwm)"
.PP
Definition at line 205 of file SyncTest.c.
.PP
Referenced by HeartbeatAction(), storeStablePoint(), and UpdateAction().
.SS "PUBLIC \fBccnr_hwm\fP ccnr_hwm_merge (struct \fBccnr_handle\fP * ccnr, \fBccnr_hwm\fP x, \fBccnr_hwm\fP y)"
.PP
Definition at line 229 of file SyncTest.c.
.SS "PUBLIC \fBccnr_hwm\fP ccnr_hwm_update (struct \fBccnr_handle\fP * ccnr, \fBccnr_hwm\fP hwm, \fBccnr_accession\fP a)"
.PP
Definition at line 223 of file SyncTest.c.
.SS "PUBLIC void ccnr_msg (struct \fBccnr_handle\fP * h, const char * fmt,  ...)"
.PP
Produce ccnr debug output. Output is produced via h->logger under the control of h->debug; prepends decimal timestamp and process identification. Caller should not supply newlines. 
.PP
\fBParameters:\fP
.RS 4
\fIh\fP the ccnr handle 
.br
\fIfmt\fP printf-like format string 
.RE
.PP

.PP
Definition at line 91 of file SyncTest.c.
.SS "PUBLIC int ccnr_msg_level_from_string (char * s)"
.PP
Definition at line 108 of file SyncTest.c.
.SS "static int existingRootOp (struct SyncTestParms * parms, char * topo, char * prefix, int delete)\fC [static]\fP"
.PP
Definition at line 1554 of file SyncTest.c.
.PP
Referenced by main().
.SS "static void formatStats (struct SyncTestParms * parms)\fC [static]\fP"
.PP
Definition at line 1123 of file SyncTest.c.
.PP
Referenced by getFile(), and putFile().
.SS "static struct \fBSyncRootStruct\fP* genTestRootRepos (struct SyncTestParms * parms)\fC [static, read]\fP"
.PP
Definition at line 683 of file SyncTest.c.
.PP
Referenced by testRootBasic().
.SS "static struct \fBSyncRootStruct\fP* genTestRootRouting (struct SyncTestParms * parms)\fC [static, read]\fP"
.PP
Definition at line 663 of file SyncTest.c.
.PP
Referenced by testRootBasic().
.SS "static int getFile (struct SyncTestParms * parms, char * src, char * dst)\fC [static]\fP"
.PP
Definition at line 1178 of file SyncTest.c.
.PP
Referenced by main().
.SS "static int localStore (struct SyncTestParms * parms, struct ccn * ccn, struct \fBccn_charbuf\fP * nm, struct \fBccn_charbuf\fP * cb)\fC [static]\fP"
.PP
Definition at line 823 of file SyncTest.c.
.PP
Referenced by existingRootOp(), and sendSlice().
.SS "int main (int argc, char ** argv)"
.PP
Definition at line 1627 of file SyncTest.c.
.SS "static int noteErr (const char * fmt,  ...)\fC [static]\fP"
.PP
Definition at line 249 of file SyncTest.c.
.PP
Referenced by existingRootOp(), main(), putFile(), putFileList(), sendSlice(), storeHandler(), testReadBuilder(), testReader(), testRootBasic(), testRootCoding(), and testRootLookup().
.SS "static int parseAndAccumName (char * s, struct \fBSyncNameAccum\fP * na)\fC [static]\fP"
.PP
Definition at line 270 of file SyncTest.c.
.PP
Referenced by readAndAccumNames().
.SS "static void printTree (struct \fBSyncTreeWorkerHead\fP * head, FILE * f)\fC [static]\fP"
.PP
Definition at line 407 of file SyncTest.c.
.PP
Referenced by testReadBuilder().
.SS "static void printTreeInner (struct \fBSyncTreeWorkerHead\fP * head, struct \fBccn_charbuf\fP * tmpB, struct \fBccn_charbuf\fP * tmpD, FILE * f)\fC [static]\fP"
.PP
Definition at line 360 of file SyncTest.c.
.PP
Referenced by printTree().
.SS "static int putFile (struct SyncTestParms * parms, char * src, char * dst)\fC [static]\fP"
.PP
Definition at line 1323 of file SyncTest.c.
.PP
Referenced by main().
.SS "static int putFileList (struct SyncTestParms * parms, char * listName)\fC [static]\fP"
.PP
Definition at line 1486 of file SyncTest.c.
.PP
Referenced by main().
.SS "static void putMark (FILE * f)\fC [static]\fP"
.PP
Definition at line 415 of file SyncTest.c.
.PP
Referenced by existingRootOp(), formatStats(), putFile(), putFileList(), sendSlice(), and storeHandler().
.SS "PUBLIC int r_sync_enumerate (struct \fBccnr_handle\fP * ccnr, struct \fBccn_charbuf\fP * interest)"
.PP
Request that a SyncNotifyContent call is made for each content object matching the interest. returns -1 for error, or an enumeration number which will also be passed in the SyncNotifyContent
.PP
Request that a SyncNotifyContent call is made for each content object matching the interest.
.PP
If SyncNotifyContent returns -1 the active enumeration will be cancelled.
.PP
When there are no more matching objects, SyncNotifyContent will be called passing NULL for name.
.PP
Content objects that arrive during an enumeration may or may not be included in that enumeration.
.PP
\fBReturns:\fP
.RS 4
-1 for error, or an enumeration number which will also be passed in the SyncNotifyContent 
.RE
.PP

.PP
Definition at line 139 of file SyncTest.c.
.SS "PUBLIC int r_sync_local_store (struct \fBccnr_handle\fP * ccnr, struct \fBccn_charbuf\fP * content)"
.PP
Called when a content object has been constructed locally by sync and needs to be committed to stable storage by the repo. returns 0 for success, -1 for error. 
.PP
Definition at line 176 of file SyncTest.c.
.SS "PUBLIC int r_sync_lookup (struct \fBccnr_handle\fP * ccnr, struct \fBccn_charbuf\fP * interest, struct \fBccn_charbuf\fP * content_ccnb)"
.PP
Look up a content object that is stored locally in the repository based on the supplied interest. appends the content object to the content_ccnb. returns 0 for success, -1 for error. 
.PP
Definition at line 148 of file SyncTest.c.
.SS "PUBLIC void r_sync_notify_after (struct \fBccnr_handle\fP * ccnr, \fBccnr_hwm\fP item)"
.PP
Notify repo of starting point for new names to be passed to sync. Use item = 0 as the initial value. Following a call to r_sync_notify_after, the repository will call SyncNotifyContent(struct \fBSyncBaseStruct\fP *, int enumeration, ccnr_accession item, struct \fBccn_charbuf\fP *name); periodically while there are no un-notified objects. enumeration is 0 for 'time-based' notifications, or the value passed in when the enumeration was started. This may not end up an int. if the call is for an explicit enumeration, and there are no more objects, name and content_comps will be NULL. If SyncNotifyContent returns -1 then the active enumeration, or the \fBr_sync_notify_after()\fP will be cancelled. 
.PP
Definition at line 132 of file SyncTest.c.
.SS "PUBLIC enum \fBccn_upcall_res\fP r_sync_upcall_store (struct \fBccnr_handle\fP * ccnr, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP * info)"
.PP
Called when a content object is received by sync and needs to be committed to stable storage by the repo. 
.PP
Definition at line 161 of file SyncTest.c.
.SS "static struct \fBSyncNameAccum\fP* readAndAccumNames (FILE * input, int rem)\fC [static, read]\fP"
.PP
Definition at line 309 of file SyncTest.c.
.PP
Referenced by putFileList(), testReadBuilder(), and testReader().
.SS "static int64_t segFromInfo (struct \fBccn_upcall_info\fP * info)\fC [static]\fP"
.PP
Definition at line 965 of file SyncTest.c.
.PP
Referenced by storeHandler().
.SS "static int sendSlice (struct SyncTestParms * parms, char * topo, char * prefix, int count, char ** clauses)\fC [static]\fP"
.PP
Definition at line 866 of file SyncTest.c.
.PP
Referenced by main().
.SS "static enum \fBccn_upcall_res\fP storeHandler (struct \fBccn_closure\fP * selfp, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP * info)\fC [static]\fP"
.PP
Definition at line 1004 of file SyncTest.c.
.PP
Referenced by putFile().
.SS "static int testEncodeDecode (struct SyncTestParms * parms)\fC [static]\fP"
.PP
Definition at line 450 of file SyncTest.c.
.PP
Referenced by main().
.SS "static struct \fBSyncNodeComposite\fP* testGenComposite (struct \fBSyncBaseStruct\fP * base, int nRefs)\fC [static, read]\fP"
.PP
Definition at line 429 of file SyncTest.c.
.PP
Referenced by testEncodeDecode().
.SS "static int testReadBuilder (struct SyncTestParms * parms)\fC [static]\fP"
.PP
Definition at line 546 of file SyncTest.c.
.PP
Referenced by main().
.SS "static int testReader (struct SyncTestParms * parms)\fC [static]\fP"
.PP
Definition at line 482 of file SyncTest.c.
.PP
Referenced by main().
.SS "static int testRootBasic (struct SyncTestParms * parms)\fC [static]\fP"
.PP
Definition at line 779 of file SyncTest.c.
.PP
Referenced by main().
.SS "static struct \fBSyncRootStruct\fP* testRootCoding (struct SyncTestParms * parms, struct \fBSyncRootStruct\fP * root)\fC [static, read]\fP"
.PP
Definition at line 710 of file SyncTest.c.
.PP
Referenced by testRootBasic().
.SS "static int testRootLookup (struct SyncTestParms * parms, struct \fBSyncRootStruct\fP * root, char * goodName, char * badName)\fC [static]\fP"
.PP
Definition at line 757 of file SyncTest.c.
.PP
Referenced by testRootBasic().
.SH "Author"
.PP 
Generated automatically by Doxygen for Content-Centric Networking in C from the source code.
