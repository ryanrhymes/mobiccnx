.TH "ccnr/ccnr_sync.c" 3 "21 Aug 2012" "Version 0.6.1" "Content-Centric Networking in C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ccnr/ccnr_sync.c \- 
.PP
Part of ccnr - CCNx Repository Daemon.  

.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "PUBLIC uintmax_t \fBccnr_accession_encode\fP (struct \fBccnr_handle\fP *ccnr, \fBccnr_accession\fP a)"
.br
.ti -1c
.RI "PUBLIC \fBccnr_accession\fP \fBccnr_accession_decode\fP (struct \fBccnr_handle\fP *ccnr, uintmax_t encoded)"
.br
.ti -1c
.RI "PUBLIC int \fBccnr_accession_compare\fP (struct \fBccnr_handle\fP *ccnr, \fBccnr_accession\fP x, \fBccnr_accession\fP y)"
.br
.ti -1c
.RI "PUBLIC uintmax_t \fBccnr_hwm_encode\fP (struct \fBccnr_handle\fP *ccnr, \fBccnr_hwm\fP hwm)"
.br
.ti -1c
.RI "PUBLIC \fBccnr_hwm\fP \fBccnr_hwm_decode\fP (struct \fBccnr_handle\fP *ccnr, uintmax_t encoded)"
.br
.ti -1c
.RI "PUBLIC int \fBccnr_acc_in_hwm\fP (struct \fBccnr_handle\fP *ccnr, \fBccnr_accession\fP a, \fBccnr_hwm\fP hwm)"
.br
.ti -1c
.RI "PUBLIC \fBccnr_hwm\fP \fBccnr_hwm_update\fP (struct \fBccnr_handle\fP *ccnr, \fBccnr_hwm\fP hwm, \fBccnr_accession\fP a)"
.br
.ti -1c
.RI "PUBLIC \fBccnr_hwm\fP \fBccnr_hwm_merge\fP (struct \fBccnr_handle\fP *ccnr, \fBccnr_hwm\fP x, \fBccnr_hwm\fP y)"
.br
.ti -1c
.RI "PUBLIC int \fBccnr_hwm_compare\fP (struct \fBccnr_handle\fP *ccnr, \fBccnr_hwm\fP x, \fBccnr_hwm\fP y)"
.br
.ti -1c
.RI "PUBLIC void \fBr_sync_notify_after\fP (struct \fBccnr_handle\fP *ccnr, \fBccnr_hwm\fP item)"
.br
.RI "\fINotify repo of starting point for new names to be passed to sync. \fP"
.ti -1c
.RI "PUBLIC int \fBr_sync_notify_content\fP (struct \fBccnr_handle\fP *ccnr, int e, struct \fBcontent_entry\fP *content)"
.br
.RI "\fIA wrapper for SyncNotifyContent that takes a content entry. \fP"
.ti -1c
.RI "static struct sync_enumeration_state * \fBcleanup_se\fP (struct \fBccnr_handle\fP *ccnr, struct sync_enumeration_state *md)"
.br
.ti -1c
.RI "static int \fBr_sync_enumerate_action\fP (struct ccn_schedule *sched, void *clienth, struct \fBccn_scheduled_event\fP *ev, int flags)"
.br
.ti -1c
.RI "PUBLIC int \fBr_sync_enumerate\fP (struct \fBccnr_handle\fP *ccnr, struct \fBccn_charbuf\fP *interest)"
.br
.RI "\fIRequest that a SyncNotifyContent call be made for each content object in the repository that matches the interest. \fP"
.ti -1c
.RI "PUBLIC int \fBr_sync_lookup\fP (struct \fBccnr_handle\fP *ccnr, struct \fBccn_charbuf\fP *interest, struct \fBccn_charbuf\fP *content_ccnb)"
.br
.RI "\fILook up a content object that is stored locally in the repository based on the supplied interest. \fP"
.ti -1c
.RI "PUBLIC enum \fBccn_upcall_res\fP \fBr_sync_upcall_store\fP (struct \fBccnr_handle\fP *ccnr, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP *info)"
.br
.RI "\fICalled when a content object is received by sync and needs to be committed to stable storage by the repo. \fP"
.ti -1c
.RI "PUBLIC int \fBr_sync_local_store\fP (struct \fBccnr_handle\fP *ccnr, struct \fBccn_charbuf\fP *content_cb)"
.br
.RI "\fICalled when a content object has been constructed locally by sync and needs to be committed to stable storage by the repo. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "static const int \fBse_cookie\fP = __LINE__"
.br
.in -1c
.SH "Detailed Description"
.PP 
Part of ccnr - CCNx Repository Daemon. 


.PP
Definition in file \fBccnr_sync.c\fP.
.SH "Function Documentation"
.PP 
.SS "PUBLIC int ccnr_acc_in_hwm (struct \fBccnr_handle\fP * ccnr, \fBccnr_accession\fP a, \fBccnr_hwm\fP hwm)"
.PP
Definition at line 89 of file ccnr_sync.c.
.SS "PUBLIC int ccnr_accession_compare (struct \fBccnr_handle\fP * ccnr, \fBccnr_accession\fP x, \fBccnr_accession\fP y)"
.PP
Definition at line 68 of file ccnr_sync.c.
.SS "PUBLIC \fBccnr_accession\fP ccnr_accession_decode (struct \fBccnr_handle\fP * ccnr, uintmax_t encoded)"
.PP
Definition at line 62 of file ccnr_sync.c.
.SS "PUBLIC uintmax_t ccnr_accession_encode (struct \fBccnr_handle\fP * ccnr, \fBccnr_accession\fP a)"
.PP
Definition at line 56 of file ccnr_sync.c.
.SS "PUBLIC int ccnr_hwm_compare (struct \fBccnr_handle\fP * ccnr, \fBccnr_hwm\fP x, \fBccnr_hwm\fP y)"
.PP
Definition at line 107 of file ccnr_sync.c.
.SS "PUBLIC \fBccnr_hwm\fP ccnr_hwm_decode (struct \fBccnr_handle\fP * ccnr, uintmax_t encoded)"
.PP
Definition at line 83 of file ccnr_sync.c.
.SS "PUBLIC uintmax_t ccnr_hwm_encode (struct \fBccnr_handle\fP * ccnr, \fBccnr_hwm\fP hwm)"
.PP
Definition at line 77 of file ccnr_sync.c.
.SS "PUBLIC \fBccnr_hwm\fP ccnr_hwm_merge (struct \fBccnr_handle\fP * ccnr, \fBccnr_hwm\fP x, \fBccnr_hwm\fP y)"
.PP
Definition at line 101 of file ccnr_sync.c.
.SS "PUBLIC \fBccnr_hwm\fP ccnr_hwm_update (struct \fBccnr_handle\fP * ccnr, \fBccnr_hwm\fP hwm, \fBccnr_accession\fP a)"
.PP
Definition at line 95 of file ccnr_sync.c.
.SS "static struct sync_enumeration_state* cleanup_se (struct \fBccnr_handle\fP * ccnr, struct sync_enumeration_state * md)\fC [static, read]\fP"
.PP
Definition at line 179 of file ccnr_sync.c.
.PP
Referenced by r_sync_enumerate(), and r_sync_enumerate_action().
.SS "PUBLIC int r_sync_enumerate (struct \fBccnr_handle\fP * ccnr, struct \fBccn_charbuf\fP * interest)"
.PP
Request that a SyncNotifyContent call be made for each content object in the repository that matches the interest. Request that a SyncNotifyContent call is made for each content object matching the interest.
.PP
If SyncNotifyContent returns -1 the active enumeration will be cancelled.
.PP
When there are no more matching objects, SyncNotifyContent will be called passing NULL for name.
.PP
Content objects that arrive during an enumeration may or may not be included in that enumeration.
.PP
\fBReturns:\fP
.RS 4
-1 for error, or an enumeration number which will also be passed in the SyncNotifyContent 
.RE
.PP

.PP
Definition at line 298 of file ccnr_sync.c.
.PP
Referenced by r_sync_enumerate(), SyncStartHeartbeat(), and SyncStartSliceEnum().
.SS "static int r_sync_enumerate_action (struct ccn_schedule * sched, void * clienth, struct \fBccn_scheduled_event\fP * ev, int flags)\fC [static]\fP"
.PP
Definition at line 195 of file ccnr_sync.c.
.PP
Referenced by r_sync_enumerate().
.SS "PUBLIC int r_sync_local_store (struct \fBccnr_handle\fP * ccnr, struct \fBccn_charbuf\fP * content_cb)"
.PP
Called when a content object has been constructed locally by sync and needs to be committed to stable storage by the repo. returns 0 for success, -1 for error. 
.PP
Definition at line 463 of file ccnr_sync.c.
.SS "PUBLIC int r_sync_lookup (struct \fBccnr_handle\fP * ccnr, struct \fBccn_charbuf\fP * interest, struct \fBccn_charbuf\fP * content_ccnb)"
.PP
Look up a content object that is stored locally in the repository based on the supplied interest. appends the content object to the content_ccnb. returns 0 for success, -1 for error. 
.PP
Definition at line 385 of file ccnr_sync.c.
.SS "PUBLIC void r_sync_notify_after (struct \fBccnr_handle\fP * ccnr, \fBccnr_hwm\fP item)"
.PP
Notify repo of starting point for new names to be passed to sync. Use item = 0 as the initial value. Following a call to r_sync_notify_after, the repository will call SyncNotifyContent(struct \fBSyncBaseStruct\fP *, int enumeration, ccnr_accession item, struct \fBccn_charbuf\fP *name); periodically while there are no un-notified objects. enumeration is 0 for 'time-based' notifications, or the value passed in when the enumeration was started. This may not end up an int. if the call is for an explicit enumeration, and there are no more objects, name and content_comps will be NULL. If SyncNotifyContent returns -1 then the active enumeration, or the \fBr_sync_notify_after()\fP will be cancelled. 
.PP
Definition at line 117 of file ccnr_sync.c.
.PP
Referenced by r_sync_notify_content(), and SyncStartHeartbeat().
.SS "PUBLIC int r_sync_notify_content (struct \fBccnr_handle\fP * ccnr, int e, struct \fBcontent_entry\fP * content)"
.PP
A wrapper for SyncNotifyContent that takes a content entry. 
.PP
Definition at line 129 of file ccnr_sync.c.
.PP
Referenced by r_store_set_accession_from_offset(), r_sync_enumerate_action(), and r_sync_notify_content().
.SS "PUBLIC enum \fBccn_upcall_res\fP r_sync_upcall_store (struct \fBccnr_handle\fP * ccnr, enum \fBccn_upcall_kind\fP kind, struct \fBccn_upcall_info\fP * info)"
.PP
Called when a content object is received by sync and needs to be committed to stable storage by the repo. 
.PP
Definition at line 421 of file ccnr_sync.c.
.PP
Referenced by r_sync_upcall_store(), and SyncRemoteFetchResponse().
.SH "Variable Documentation"
.PP 
.SS "const int \fBse_cookie\fP = __LINE__\fC [static]\fP"
.PP
Definition at line 176 of file ccnr_sync.c.
.PP
Referenced by cleanup_se(), r_sync_enumerate(), and r_sync_enumerate_action().
.SH "Author"
.PP 
Generated automatically by Doxygen for Content-Centric Networking in C from the source code.
